package org.javatribe.courseSystem.Activity;


import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.javatribe.courseSystem.R;



import org.javatribe.courseSystem.global.Constant;
import org.javatribe.courseSystem.model.Course;
import org.javatribe.courseSystem.net.GetDataWithJson;
import org.javatribe.courseSystem.ui.MyImageView;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.app.Dialog;
import android.content.DialogInterface;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v4.app.Fragment;
import android.text.Editable;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.Toast;
import android.support.v7.widget.GridLayout;

/**我的无课表界面
 * @author qing
 *2014/10/2
 */
public class MyCourseFragment extends Fragment implements OnClickListener{

	GridLayout gridlayoutCourse;
	Bundle bundle;
	int rowNum;
	int colNum;
	int[][] press;
	private int mCourseCount;
	private SharedPreferences setting;
	private static final String TAG="";
	private final String PREFS_NAME="org.javatribe.courseSystem";
	private boolean isSetCourse;//是否设置过无课表
	private Handler courseHandler;
	private List<Course> courses;
	private String sno;
	private int orgId;
	private Map<String,String> data;
	private MyImageView[][] myImageView;
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		 View rootView=inflater.inflate(R.layout.fragment_my_course,null);
		 gridlayoutCourse=(GridLayout)rootView.findViewById(R.id.fmc_gl_course);
		 bundle=getArguments();
		 setting=getActivity().getSharedPreferences(PREFS_NAME,0);
		 mCourseCount=setting.getInt("dialyCourseCount", 10);
		 isSetCourse=setting.getBoolean("isSetCourse", false);
		 sno=setting.getString("stuNo", "121542104");
		 orgId=setting.getInt("orgId", 1);
		
		 //mCourseCount=bundle.getInt("courseCount");
		 if(isSetCourse)
		 {
			 courseHandler=new Handler()
				{
					public void handleMessage(Message msg)
					{
						if(msg.what==1)
						{
							initCourse();
						}
						else
						{
							Toast.makeText(getActivity(), "获取无课表失败！",Toast.LENGTH_SHORT ).show();
						}
					}
				};
				data.put("orgId", orgId+"");
				data.put("sno", sno);
				getCourses(data);
			
		 }
		 else
		 {
			
		 }
		rowNum=mCourseCount+2;//行数等于课时数加1
		 
		 colNum=6;//上课时间为5天，所以设置了6列
		 gridlayoutCourse.setRowCount(rowNum+1);
		 gridlayoutCourse.setColumnCount(colNum);
		 press=new int[colNum-1][mCourseCount];//实际的所有课数是colNum
		 myImageView=new MyImageView[colNum-1][mCourseCount];
		 return rootView;
		
		
	}
	@Override
	public void onClick(View v) {
		// TODO Auto-generated method stub
		if(v instanceof MyImageView)//如果点击的是MyImageView的对象
		{
			MyImageView myView=(MyImageView)v;
			int row=myView.getRow();
			int col=myView.getCol();
			int press_time=press[col][row];
			press_time++;
			if(press_time>3)
			{
				press_time=0;
			}
			
			switch(press_time)
			{
			case 0:
				myView.setBackgroundResource(R.drawable.course_default);
				break;
			case 1:
				myView.setBackgroundResource(R.drawable.course_1);
				myView.setAdjustViewBounds(true);
				break;
			case 2:
				myView.setBackgroundResource(R.drawable.course_2);
				myView.setAdjustViewBounds(true);
				break;
			case 3:
				myView.setBackgroundResource(R.drawable.course_3);
				myView.setAdjustViewBounds(true);
				break;
			}
			press[col][row]=press_time;
			Toast.makeText(getActivity(), "row="+row+"col="+col+"presstime="+press_time, Toast.LENGTH_SHORT).show();
		}
	}
	public void setCourse()
	{
		 for(int i=0;i<mCourseCount*colNum;i++)
			{
				GridLayout.Spec rowSpec=GridLayout.spec(i/colNum+1);
				GridLayout.Spec colSpec=GridLayout.spec(i%colNum);
				GridLayout.LayoutParams params=new GridLayout.LayoutParams(rowSpec,colSpec);
				if(i%colNum!=0)
				{ 
				MyImageView img=new MyImageView(getActivity());
				//img.setBackgroundColor(getResources().getColor(R.color.no_class));
				img.setBackgroundResource(R.drawable.course_default);
				img.setRow(i/colNum);
				img.setCol(i%colNum-1);
				//img.setOnClickListener(this);
				gridlayoutCourse.addView(img,params);
				}
				else
				{
					params.width=LayoutParams.WRAP_CONTENT;
					params.height=LayoutParams.WRAP_CONTENT;
					
					TextView tv=new TextView(getActivity());
					tv.setTextSize(10);
					tv.setText(i/colNum+1+"");
					gridlayoutCourse.addView(tv,params);
				}
			
				
			 // params.width=
				//params.setGravity(Gravity.FILL);//如果不想要拉伸就不要设置gravity.
		
			
			}
			Button alterBtn=new Button(getActivity());
			alterBtn.setText("修改");
			GridLayout.Spec alterRowSpec=GridLayout.spec(rowNum-1);
			GridLayout.Spec alterColSpec=GridLayout.spec(colNum/2);
			GridLayout.LayoutParams params=new GridLayout.LayoutParams(alterRowSpec,alterColSpec);
			gridlayoutCourse.addView(alterBtn,params);
			Button okBtn=new Button(getActivity());
			okBtn.setText("确定");
			GridLayout.Spec okRowSpec=GridLayout.spec(rowNum-1);
			GridLayout.Spec okColSpec=GridLayout.spec(colNum/2+1);
			GridLayout.LayoutParams okParams=new GridLayout.LayoutParams(okRowSpec,okColSpec);
			gridlayoutCourse.addView(okBtn,okParams);
	}
	public void initCourse()
	{
		 press=new int[colNum-1][mCourseCount];//实际的所有课数是colNum
		 for(int i=0;i<press.length;i++)
		 {
			 for(int j=0;j<press[i].length;j++)
			 press[i][j]=1;
		 }
		 
		 for(int i=0;i<courses.size();i++)
		 {
			 Course course=(Course)courses.get(i);
			 int course_no=course.getCourseNo();
			 int week_type=course.getWeekType();
			 int week_day=course.getWeekday();
			 switch(week_type)
				{
				case 0:
					press[week_day-1][course_no-1]=0;
					break;
				case 1:
					press[week_day-1][course_no-1]=2;
					break;
				case 2:
					press[week_day-1][course_no-1]=3;
					break;
				}
			
		 }

		 //Toast.makeText(getActivity(), "i="+, Toast.LENGTH_SHORT).show();
		 for(int i=0;i<press.length;i++)
		 {
			 for(int j=0;j<press[i].length;j++)
			 {
				 GridLayout.Spec rowSpec=GridLayout.spec(j+1);
					GridLayout.Spec colSpec=GridLayout.spec(i+1);
					GridLayout.LayoutParams params=new GridLayout.LayoutParams(rowSpec,colSpec);
					MyImageView img=new MyImageView(getActivity());
					myImageView[i][j]=img;
					switch(press[i][j])
					{
					case 0:
						img.setBackgroundResource(R.drawable.top_bg);
						break;
					case 1:
						img.setBackgroundResource(R.drawable.ic_launcher);
						img.setAdjustViewBounds(true);
						break;
					case 2:
						img.setBackgroundResource(R.drawable.back_f);
						img.setAdjustViewBounds(true);
						break;
					case 3:
						img.setBackgroundResource(R.drawable.back_n);
						img.setAdjustViewBounds(true);
						break;
					}
					img.setRow(j);
					img.setCol(i);
					//img.setOnClickListener(this);
					gridlayoutCourse.addView(img,params);
			 } 
		 }
		 for(int i=1;i<=mCourseCount;i++)
		 {
			 GridLayout.Spec rowSpec=GridLayout.spec(i);
				GridLayout.Spec colSpec=GridLayout.spec(0);
				GridLayout.LayoutParams params=new GridLayout.LayoutParams(rowSpec,colSpec);
				params.width=LayoutParams.WRAP_CONTENT;
				params.height=LayoutParams.WRAP_CONTENT;
				TextView tv=new TextView(getActivity());
				tv.setText(i+"");
				gridlayoutCourse.addView(tv,params);
		 }
		 Button alterBtn=new Button(getActivity());
			alterBtn.setText("修改");
			GridLayout.Spec alterRowSpec=GridLayout.spec(rowNum-1);
			GridLayout.Spec alterColSpec=GridLayout.spec(colNum/2);
			GridLayout.LayoutParams params=new GridLayout.LayoutParams(alterRowSpec,alterColSpec);
			gridlayoutCourse.addView(alterBtn,params);
			//alterBtn.setId(2);
			Button okBtn=new Button(getActivity());
			okBtn.setText("确定");
			GridLayout.Spec okRowSpec=GridLayout.spec(rowNum-1);
			GridLayout.Spec okColSpec=GridLayout.spec(colNum/2+1);
			GridLayout.LayoutParams okParams=new GridLayout.LayoutParams(okRowSpec,okColSpec);
			gridlayoutCourse.addView(okBtn,okParams);
	}
	public void getCourses(final Map<String,String> data)
	{
		Thread thread=new Thread(){
			public void run()
			{
				String result=GetDataWithJson.getDataWithJsonViaSimpleData(Constant.BASE_URL+"/"+Constant.NAMESPACE_COURSE+"/"+Constant.COURSE_NOCLASS_PERSONINFO_BY_SCHOOLNO_OR_NAME_ACTION,data);
				Message msg=courseHandler.obtainMessage();
				if(result!=null&&result!="error")
				{
					Type type=new TypeToken<List<Course>>(){}.getType();
					courses=new Gson().fromJson(result,type);
					msg.what=1;
				}
				else
				{
					msg.what=-1;
				}
				courseHandler.sendMessage(msg);
		
			}
		};
		thread.start();
	}
}
